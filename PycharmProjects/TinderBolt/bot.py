from telegram.ext import ApplicationBuilder, MessageHandler, filters, CallbackQueryHandler, CommandHandler

from gpt import *
from util import *


# —Ç—É—Ç –±—É–¥–µ–º –ø–∏—Å–∞—Ç—å –Ω–∞—à –∫–æ–¥ :)
async def start(update, context):
    dialog.mode = "main"
    # –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ messages
    text = load_message("main")
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ images
    await send_photo(update, context, "main")
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –¢–ì
    await send_text(update, context, text)
    await show_main_menu(update, context, {
        "start ": "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞",
        "profile ": "–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder - –ø—Ä–æ—Ñ–ª—è üòé",
        "opener ": "—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞",
        "message": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà",
        "date": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•",
        "gpt": "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–∞—Ç—É GPT üß†"
    })


async def date(update, context):
    dialog.mode = "date"
    # –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ messages
    text_date = load_message("date")
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ images
    await send_photo(update, context, "date")
    #    await send_text(update, context, text_date)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–æ–∫ –≤ –¢–ì
    await send_text_buttons(update, context, text_date, {
        "date_grande": "–ê—Ä–∏–∞–Ω–∞ –ì—Ä–∞–Ω–¥–µ",
        "date_robbie": "–ú–∞—Ä–≥–æ –†–æ–±–±–∏",
        "date_zendaya": "–ó–µ–Ω–¥–µ—è",
        "date_gosling": "–†–∞–π–∞–Ω –ì–æ—Å–ª–∏–Ω–≥",
        "date_hardy": "–¢–æ–º –•–∞—Ä–¥–∏"
    })


async def date_dialog(update, context):
    # —Ç–µ–∫—Å—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –¢–ì
    text = update.message.text
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞/–∑–∞–≥–ª—É—à–∫–∏ –≤ –¢–ì
    my_message = await send_text(update, context, "–ù–∞–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç...")
    answer = await chatgpt.add_message(text)
    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞/–∑–∞–≥–ª—É—à–∫–∏ –≤ –¢–ì
    await my_message.edit_text(answer)
#    await send_text(update, context, answer)

async def date_button(update, context):
    query = update.callback_query.data
    await update.callback_query.answer()
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ images –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≥–µ—Ä–æ—è
    await send_photo(update, context, query)
    if query == "date_grande":
        query_date = "–ê—Ä–∏–∞–Ω–∞ –ì—Ä–∞–Ω–¥–µ"
    elif query == "date_robbie":
        query_date = "–ú–∞—Ä–≥–æ –†–æ–±–±–∏"
    elif query == "date_zendaya":
        query_date = "–ó–µ–Ω–¥–µ—è"
    elif query == "date_gosling":
        query_date = "–†–∞–π–∞–Ω –ì–æ—Å–ª–∏–Ω–≥"
    elif query == "date_hardy":
        query_date = "–¢–æ–º –•–∞—Ä–¥–∏"
    await send_html(update, context, "–û–≥–æ, " + query_date + ". –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ –∑–∞ 5 —Å–æ–æ–±—â–µ–Ω–∏–π")
    prompt = load_prompt(query)
    chatgpt.set_prompt(prompt)


async def message (update, context):
    dialog.mode = "message"
    # –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ messages
    text_message = load_message("message")
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ images
    await send_photo(update, context, "message")
#    await send_text(update, context, text_message)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–æ–∫ –≤ –¢–ì
    await send_text_buttons(update, context, text_message, {
        "message_next": "–°–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
        "message_date": "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ"
    })
    dialog.list.clear()

async def message_dialog (update, context):
    # —Ç–µ–∫—Å—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –¢–ì
    text = update.message.text
    dialog.list.append(text)

async def profile (update, context):
    dialog.mode = "profile"
    # –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ messages
    text = load_message("profile")
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ images
    await send_photo(update, context, "profile")
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –¢–ì
    await send_text(update, context, text)
    dialog.user.clear()
    dialog.count = 0
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –¢–ì
    await send_text(update, context, "–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç")

async def profile_dialog (update, context):
    dialog.count +=1
    # —Ç–µ–∫—Å—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –¢–ì
    text = update.message.text
    if dialog.count == 1:
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        dialog.user["age"] = text
        await send_text(update, context, "–ö–µ–º –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?")
    if dialog.count == 2:
        dialog.user["occupation"] = text
        await send_text(update, context, "–£ –≤–∞—Å –µ—Å—Ç—å —Ö–æ–±–±–∏?")
    if dialog.count == 3:
        dialog.user["hobby"] = text
        await send_text(update, context, "–ß—Ç–æ –≤–∞–º –ù–ï –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ –ª—é–¥—è—Ö?")
    if dialog.count == 4:
        dialog.user["annoys"] = text
        await send_text(update, context, "–¶–µ–ª—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞?")
    if dialog.count == 5:
        dialog.user["goals"] = text

        prompt = load_prompt("profile")
        # –°–∫–ª–µ–∏–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç
        user_info = dialog_user_info_to_str(dialog.user)
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞/–∑–∞–≥–ª—É—à–∫–∏ –≤ –¢–ì
        my_message = await send_text(update, context, "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è...")
        answer = await chatgpt.send_question(prompt, user_info)
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞/–∑–∞–≥–ª—É—à–∫–∏ –≤ –¢–ì
        await my_message.edit_text(answer)

async def opener (update, context):
    dialog.mode = "opener"
    # –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ messages
    text = load_message("opener")
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ images
    await send_photo(update, context, "opener")
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –¢–ì
    await send_text(update, context, text)

    dialog.user.clear()
    dialog.count = 0
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –¢–ì
    await send_text(update, context, "–ò–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ ")

async def opener_dialog (update, context):
    dialog.count += 1
    # —Ç–µ–∫—Å—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –¢–ì
    text = update.message.text
    if dialog.count == 1:
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        dialog.user["name"] = text
        await send_text(update, context, "–°–∫–æ–ª—å–∫–æ –ª–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—É?")
    elif dialog.count == 2:
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        dialog.user["age"] = text
        await send_text(update, context, "–û—Ü–µ–Ω–∏—Ç–µ –≤–Ω–µ—à–Ω–æ—Å—Ç—å 1-10?")
    elif dialog.count == 3:
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        dialog.user["handsome"] = text
        await send_text(update, context, "–ö–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç?")
    elif dialog.count == 4:
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        dialog.user["occupation"] = text
        await send_text(update, context, "–¶–µ–ª—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞?")
    elif dialog.count == 5:
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        dialog.user["goals"] = text

        prompt = load_prompt("opener")
        # –°–∫–ª–µ–∏–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç
        user_info = dialog_user_info_to_str(dialog.user)
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞/–∑–∞–≥–ª—É—à–∫–∏ –≤ –¢–ì
        my_message = await send_text(update, context, "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è...")
        answer = await chatgpt.send_question(prompt, user_info)
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞/–∑–∞–≥–ª—É—à–∫–∏ –≤ –¢–ì
        await my_message.edit_text(answer)


async def message_button (update, context):
    query = update.callback_query.data
    await update.callback_query.answer()
    # –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ prompt
    prompt = load_prompt(query)
    # –°–∫–ª–µ–∏–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç
    user_chat_history = "\n\n".join(dialog.list)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞/–∑–∞–≥–ª—É—à–∫–∏ –≤ –¢–ì
    my_message = await send_text(update, context, "–ù–∞–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç...")
    answer = await chatgpt.send_question(prompt, user_chat_history)
    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞/–∑–∞–≥–ª—É—à–∫–∏ –≤ –¢–ì
    await my_message.edit_text(answer)


async def gpt(update, context):
    dialog.mode = "gpt"
    # –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ messages
    text = load_message("gpt")
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ images
    await send_photo(update, context, "gpt")
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –¢–ì
    await send_text(update, context, text)


# –í –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–ª–æ–∂–µ–Ω –∞–ª–≥–æ—Ä–∏—Ç–º –æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —á–∞—Ç–∞ GPT
async def gpt_dialog(update, context):
    # —Ç–µ–∫—Å—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –¢–ì
    text = update.message.text
    prompt = load_prompt("gpt")
    answer = await chatgpt.send_question(prompt, text)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –¢–ì
    await send_text(update, context, answer)


# –Ω–∞—É—á–∏–º –±–æ—Ç–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Ç–≤–µ—Ç
async def hello(update, context):
    # –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ä–∞–º–∫–∞—Ö –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    if dialog.mode == "gpt":
        await gpt_dialog(update, context)
    elif dialog.mode == "date":
        await date_dialog(update, context)
    elif dialog.mode == "message":
        await message_dialog(update, context)
    elif dialog.mode == "profile":
        await profile_dialog(update, context)
    elif dialog.mode == "opener":
        await opener_dialog(update, context)
    else:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –¢–ì
        await send_text(update, context, "*–ü—Ä–∏–≤–µ—Ç*")
        await send_text(update, context, "_–ö–∞–∫ –¥–µ–ª–∞?_")
        await send_text(update, context, "–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: " + update.message.text)
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ images
        await send_photo(update, context, "avatar_main")
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–æ–∫ –≤ –¢–ì
        await send_text_buttons(update, context, "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å?", {
            "btn_start": "–ó–∞–ø—É—Å—Ç–∏—Ç—å",
            "btn_stop": "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
        })


async def hello_button(update, context):
    query = update.callback_query.data
    await update.callback_query.answer()

    if query == "btn_start":
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –¢–ì
        await send_text(update, context, "–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω")
    else:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –¢–ì
        await send_text(update, context, "–ü—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


dialog = Dialog()
dialog.mode = None
dialog.list = []
dialog.user = { }
dialog.count = 0


chatgpt = ChatGptService(
    token="gpt:AgyOcazJ_9quXv71Cmo5u2qL1h_yytAiMaLywhYDr4xfoPUGP5gydVoBSJn5uc3GqTuBPJbtubJFkblB3TDn6T_un4buKEeUskeZ643kOrIteowKr2YUyjnyrDJyERTkMvgCT-Qm0H05svs_TEjdX546CNgN")

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —á–∞—Ç—É
app = ApplicationBuilder().token("7655264179:AAE1LTOG7pDmaphBpFCmRE32rCF-uavuyxY").build()
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("date", date))
app.add_handler(CommandHandler("message", message))
app.add_handler(CommandHandler("gpt", gpt))
app.add_handler(CommandHandler("profile", profile))
app.add_handler(CommandHandler("opener", opener))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–∏—à—É—Ç—Å—è –≤ —á–∞—Ç
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, hello))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å —à–∞–±–ª–æ–Ω–æ–º –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ –≤–∏–¥–µ —Ä–µ–≥—É–ª—è—Ä–∫–∏
app.add_handler(CallbackQueryHandler(date_button, pattern="^date_.*"))
app.add_handler(CallbackQueryHandler(message_button, pattern="^message_.*"))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
app.add_handler(CallbackQueryHandler(hello_button))
app.run_polling()

